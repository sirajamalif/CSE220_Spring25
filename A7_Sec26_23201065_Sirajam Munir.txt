# Task-01:

def LCA(root, x, y):
    if root == None:
        return None

    if x < root.elem and y < root.elem:
        return LCA(root.left, x, y)
    
    if x > root.elem and y > root.elem:
        return LCA(root.right, x, y)

    return root.elem


# Task-02:

def find_path(root, key):
    sirajam_p = []
    s_alif = root

    while s_alif != None:
        sirajam_p += [s_alif.elem]   
        
        if key == s_alif.elem:
            return sirajam_p
        elif key < s_alif.elem:
            s_alif = s_alif.left
        else:
            s_alif = s_alif.right
    return "No Path Found"


# Task-03:

def sum_of_leaves(root, sum):
    if root == None:
        return sum
    
    if root.left is None and root.right is None:
        sum += root.elem

    sum = sum_of_leaves(root.left, sum)
    sum = sum_of_leaves(root.right, sum)

    return sum


# Task-04:

def mirror_sum(root):
    def dino_fighter(dino_l, dino_r):
        if dino_l == None or dino_r == None:
            return 0
        
        death_dino = dino_l.elem + dino_r.elem
        
        death_dino += dino_fighter(dino_l.left, dino_r.right)
        death_dino += dino_fighter(dino_l.right, dino_r.left)
        
        return death_dino

    if root is None:
        return 0

    return dino_fighter(root.left, root.right)

